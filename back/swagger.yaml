swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: User successfully logged in
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: User successfully created
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: Successfully got user profile data
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: Successfully updated user profile data
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get All Transactions
      description: API for fetching all transactions
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: Successfully retrieved transactions
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Create Transaction
      description: API for creating a new transaction
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Transaction Payload
          required: true
          schema:
            $ref: "#/definitions/Transaction"
      produces:
        - application/json
      responses:
        "200":
          description: Successfully created transaction
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /transactions/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Get Transaction by ID
      description: API for fetching a transaction by ID
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: id
          type: string
          description: Transaction ID
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: Successfully retrieved transaction
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid Fields
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Edit Transaction by ID
      description: API for editing a transaction by ID
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: id
          type: string
          description: Transaction ID
          required: true
        - in: body
          name: body
          description: Update transaction category and notes
          required: true
          schema:
            $ref: "#/definitions/TransactionUpdate"
      produces:
        - application/json
      responses:
        "200":
          description: Successfully updated transaction
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Delete Transaction by ID
      description: API for deleting a transaction by ID
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: id
          type: string
          description: Transaction ID
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: Successfully deleted transaction
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    type: object
    required:
      - email
      - password
      - firstName
      - lastName
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name
  Login:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
        description: Status code of the response
      message:
        type: string
        description: Response message
      body:
        type: object
        properties:
          id:
            type: string
            description: User ID
          email:
            type: string
            description: User email
  LoginResponse:
    type: object
    properties:
      token:
        type: string
        description: JWT token for authentication
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name
  ErrorResponse:
    type: object
    properties:
      status:
        type: integer
        description: Error status code
      message:
        type: string
        description: Error message
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Transaction ID
      amount:
        type: number
        description: Transaction amount
      category:
        type: string
        description: Transaction category
      date:
        type: string
        format: date-time
        description: Transaction date
      notes:
        type: string
        description: Transaction notes
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
        description: Transaction category
      notes:
        type: string
        description: Transaction notes
